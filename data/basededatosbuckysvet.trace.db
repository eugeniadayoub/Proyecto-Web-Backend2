2025-04-24 14:33:07.312761-05:00 jdbc[14]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:07.314472-05:00 jdbc[14]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:07.315612-05:00 jdbc[14]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:07.316018-05:00 jdbc[14]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:07.316544-05:00 jdbc[14]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:17.422546-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:17.422950-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:17.423333-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:17.423632-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:17.423906-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:41.618800-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:41.619196-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:41.619524-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:41.619738-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:41.619968-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:45.896849-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:45.897174-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:45.897472-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:45.897666-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:45.897887-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:50.721036-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:50.721360-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:50.721629-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:50.721829-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:50.722038-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:54.851300-05:00 jdbc[32]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:54.853547-05:00 jdbc[32]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:54.854698-05:00 jdbc[32]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:54.855554-05:00 jdbc[32]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:33:54.857016-05:00 jdbc[32]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:00.652737-05:00 jdbc[36]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:00.653068-05:00 jdbc[36]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:00.653371-05:00 jdbc[36]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:00.653573-05:00 jdbc[36]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:00.653777-05:00 jdbc[36]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:07.400079-05:00 jdbc[37]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:07.400344-05:00 jdbc[37]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:07.400577-05:00 jdbc[37]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:07.400743-05:00 jdbc[37]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:07.400931-05:00 jdbc[37]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:37.416632-05:00 jdbc[38]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:37.419245-05:00 jdbc[38]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:37.420084-05:00 jdbc[38]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:37.420484-05:00 jdbc[38]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:37.420743-05:00 jdbc[38]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:51.287660-05:00 jdbc[39]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:51.288134-05:00 jdbc[39]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:51.288371-05:00 jdbc[39]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:51.289020-05:00 jdbc[39]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:51.289238-05:00 jdbc[39]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:58.035331-05:00 jdbc[40]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:58.035847-05:00 jdbc[40]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:58.036053-05:00 jdbc[40]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:58.036206-05:00 jdbc[40]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:34:58.036387-05:00 jdbc[40]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:03.775684-05:00 jdbc[41]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:03.778183-05:00 jdbc[41]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:03.778474-05:00 jdbc[41]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:03.778663-05:00 jdbc[41]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:03.778844-05:00 jdbc[41]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:05.683461-05:00 jdbc[43]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:05.683775-05:00 jdbc[43]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:05.684067-05:00 jdbc[43]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:05.684246-05:00 jdbc[43]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:05.684451-05:00 jdbc[43]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:07.316139-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:07.316374-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:07.316561-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:07.316690-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:07.316848-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:25.190042-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:25.191024-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:25.191209-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:25.191344-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:25.191500-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:32.920930-05:00 jdbc[46]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:32.922248-05:00 jdbc[46]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:32.922497-05:00 jdbc[46]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:32.922643-05:00 jdbc[46]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:32.922831-05:00 jdbc[46]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:51.877861-05:00 jdbc[47]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:51.879167-05:00 jdbc[47]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:51.879436-05:00 jdbc[47]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:51.880657-05:00 jdbc[47]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:51.881190-05:00 jdbc[47]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:54.515190-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:54.515396-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:54.515568-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:54.515696-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:35:54.515831-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:01.207800-05:00 jdbc[49]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:01.209237-05:00 jdbc[49]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:01.209763-05:00 jdbc[49]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:01.210073-05:00 jdbc[49]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:01.210399-05:00 jdbc[49]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:03.976104-05:00 jdbc[52]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:03.976435-05:00 jdbc[52]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:03.976963-05:00 jdbc[52]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:03.977382-05:00 jdbc[52]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:03.977584-05:00 jdbc[52]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:05.632757-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:05.633003-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:05.633200-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:05.633319-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:05.633463-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:07.220612-05:00 jdbc[55]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:07.221241-05:00 jdbc[55]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:07.221517-05:00 jdbc[55]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:07.221718-05:00 jdbc[55]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:07.221877-05:00 jdbc[55]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:09.856029-05:00 jdbc[56]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:09.856320-05:00 jdbc[56]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:09.856521-05:00 jdbc[56]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:09.856653-05:00 jdbc[56]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:09.856794-05:00 jdbc[56]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:11.493018-05:00 jdbc[57]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:11.493707-05:00 jdbc[57]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:11.493987-05:00 jdbc[57]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:11.494126-05:00 jdbc[57]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:11.494283-05:00 jdbc[57]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:18.249919-05:00 jdbc[58]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:18.250564-05:00 jdbc[58]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:18.250931-05:00 jdbc[58]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:18.251154-05:00 jdbc[58]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:18.251381-05:00 jdbc[58]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:42.249641-05:00 jdbc[60]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:42.250208-05:00 jdbc[60]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:42.250495-05:00 jdbc[60]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:42.250673-05:00 jdbc[60]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:42.250829-05:00 jdbc[60]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:44.972680-05:00 jdbc[61]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:44.973018-05:00 jdbc[61]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:44.973359-05:00 jdbc[61]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:44.973503-05:00 jdbc[61]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:44.973653-05:00 jdbc[61]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:47.663434-05:00 jdbc[62]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:47.663833-05:00 jdbc[62]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:47.664029-05:00 jdbc[62]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:47.664157-05:00 jdbc[62]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:47.664302-05:00 jdbc[62]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:49.266238-05:00 jdbc[63]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:49.266460-05:00 jdbc[63]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:49.266644-05:00 jdbc[63]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:49.266765-05:00 jdbc[63]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:49.266895-05:00 jdbc[63]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:50.853396-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:50.853685-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:50.853869-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:50.853988-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:36:50.854123-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:37:56.820365-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:37:56.821568-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:37:56.822001-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:37:56.822295-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:37:56.822624-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:02.888962-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:02.889566-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:02.889874-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:02.890108-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:02.890367-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:05.753016-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:05.753340-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:05.753641-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:05.753868-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:05.754115-05:00 jdbc[24]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:08.574290-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:08.574682-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:08.574964-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:08.575162-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:08.575390-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:13.415349-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:13.415669-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:13.415916-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:13.416130-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:13.416345-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:15.270330-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:15.271134-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:15.271628-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:15.272131-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:15.272682-05:00 jdbc[54]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:17.088979-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:17.089307-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:17.089579-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:17.089759-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:17.089993-05:00 jdbc[64]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:18.828330-05:00 jdbc[74]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:18.828625-05:00 jdbc[74]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:18.828893-05:00 jdbc[74]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:18.829078-05:00 jdbc[74]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:38:18.829281-05:00 jdbc[74]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:11.975667-05:00 jdbc[84]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:11.976534-05:00 jdbc[84]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:11.976817-05:00 jdbc[84]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:11.977021-05:00 jdbc[84]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:11.977224-05:00 jdbc[84]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:15.039962-05:00 jdbc[94]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:15.040329-05:00 jdbc[94]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:15.040580-05:00 jdbc[94]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:15.040746-05:00 jdbc[94]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:15.040948-05:00 jdbc[94]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:18.145427-05:00 jdbc[99]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:18.146594-05:00 jdbc[99]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:18.146847-05:00 jdbc[99]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:18.147021-05:00 jdbc[99]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:18.147208-05:00 jdbc[99]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:20.043243-05:00 jdbc[106]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:20.043559-05:00 jdbc[106]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:20.043790-05:00 jdbc[106]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:20.043947-05:00 jdbc[106]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:20.044124-05:00 jdbc[106]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:23.913561-05:00 jdbc[111]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:23.913977-05:00 jdbc[111]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:23.914196-05:00 jdbc[111]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:23.914342-05:00 jdbc[111]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:40:23.914527-05:00 jdbc[111]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:54:53.645050-05:00 jdbc[122]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:54:53.645711-05:00 jdbc[122]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:54:53.645935-05:00 jdbc[122]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:54:53.646080-05:00 jdbc[122]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:54:53.646238-05:00 jdbc[122]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:20.741290-05:00 jdbc[132]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:20.741745-05:00 jdbc[132]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:20.741926-05:00 jdbc[132]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:20.742047-05:00 jdbc[132]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:20.742211-05:00 jdbc[132]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:23.607986-05:00 jdbc[142]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:23.608240-05:00 jdbc[142]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:23.608458-05:00 jdbc[142]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:23.608640-05:00 jdbc[142]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:23.608854-05:00 jdbc[142]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:42.620774-05:00 jdbc[152]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:42.621313-05:00 jdbc[152]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:42.621557-05:00 jdbc[152]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:42.621742-05:00 jdbc[152]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:42.621905-05:00 jdbc[152]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:49.503969-05:00 jdbc[162]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:49.504688-05:00 jdbc[162]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:49.504995-05:00 jdbc[162]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:49.505147-05:00 jdbc[162]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:49.505361-05:00 jdbc[162]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:53.312101-05:00 jdbc[172]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:53.312938-05:00 jdbc[172]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:53.313271-05:00 jdbc[172]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:53.313590-05:00 jdbc[172]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:53.313840-05:00 jdbc[172]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:57.242694-05:00 jdbc[182]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:57.243833-05:00 jdbc[182]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:57.244088-05:00 jdbc[182]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:57.244220-05:00 jdbc[182]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:57.244362-05:00 jdbc[182]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:59.024087-05:00 jdbc[192]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:59.024388-05:00 jdbc[192]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:59.024569-05:00 jdbc[192]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:59.024708-05:00 jdbc[192]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:55:59.024851-05:00 jdbc[192]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:56:03.819480-05:00 jdbc[202]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:56:03.819837-05:00 jdbc[202]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:56:03.820036-05:00 jdbc[202]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:56:03.820158-05:00 jdbc[202]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:56:03.820297-05:00 jdbc[202]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:57:19.377033-05:00 jdbc[213]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:57:19.377664-05:00 jdbc[213]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:57:19.377853-05:00 jdbc[213]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:57:19.377977-05:00 jdbc[213]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:02.768997-05:00 jdbc[219]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:02.769714-05:00 jdbc[219]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:02.770748-05:00 jdbc[219]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:02.771530-05:00 jdbc[219]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:05.622667-05:00 jdbc[224]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:05.624191-05:00 jdbc[224]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:05.625339-05:00 jdbc[224]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:05.627146-05:00 jdbc[224]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 14:58:05.627729-05:00 jdbc[224]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:01:53.635496-05:00 jdbc[234]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:01:53.636145-05:00 jdbc[234]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:01:53.636347-05:00 jdbc[234]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:01:53.636480-05:00 jdbc[234]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:01:53.636652-05:00 jdbc[234]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:27.362512-05:00 jdbc[245]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:27.363211-05:00 jdbc[245]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:27.363421-05:00 jdbc[245]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:27.363578-05:00 jdbc[245]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:27.363718-05:00 jdbc[245]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:33.836086-05:00 jdbc[256]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:33.836542-05:00 jdbc[256]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:33.836779-05:00 jdbc[256]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:33.836960-05:00 jdbc[256]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:33.837120-05:00 jdbc[256]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:54.899805-05:00 jdbc[266]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:54.900505-05:00 jdbc[266]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:54.900786-05:00 jdbc[266]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:54.901090-05:00 jdbc[266]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:54.901620-05:00 jdbc[266]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:57.698734-05:00 jdbc[276]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:57.698960-05:00 jdbc[276]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:57.699159-05:00 jdbc[276]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:57.699272-05:00 jdbc[276]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:03:57.699419-05:00 jdbc[276]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:06:55.279117-05:00 jdbc[287]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:06:55.279699-05:00 jdbc[287]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:06:55.279872-05:00 jdbc[287]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:06:55.279985-05:00 jdbc[287]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:06:55.280112-05:00 jdbc[287]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-24 15:07:54.443506-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 63 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 57 more
2025-04-24 15:07:55.860715-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:07:56.870336-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:07:57.895066-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:07:58.902539-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:07:59.917553-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:08:01.009036-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:93)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 67 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 61 more
2025-04-24 15:09:26.022178-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 63 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 57 more
2025-04-24 15:09:27.443911-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:09:28.453517-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:09:29.476711-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:09:30.489624-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:09:31.507492-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableStrategy.prepare(GlobalTemporaryTableStrategy.java:91)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5296)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:200)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:373)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:302)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-04-24 15:09:32.603633-05:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:93)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 67 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/eugeniadayoub/Documents/GitHub/Proyecto-Web-Backend2/data/basededatosbuckysvet.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 61 more

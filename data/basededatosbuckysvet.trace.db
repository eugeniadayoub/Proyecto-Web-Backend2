2025-04-30 13:31:31.393774-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM DUENO MASCOTA [*]MEDICAMENTO"; SQL statement:
SELECT * FROM DUENO MASCOTA MEDICAMENTO [42000-232]
2025-04-30 13:31:41.448534-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * [*]FROMTRATAMIENTO  MEDICAMENTO"; SQL statement:
SELECT * FROMTRATAMIENTO  MEDICAMENTO [42000-232]
2025-04-30 17:28:16.305999-05:00 jdbc[25]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-30 17:28:16.384140-05:00 jdbc[25]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-30 17:28:16.384579-05:00 jdbc[25]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(activo boolean, numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), estado varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-30 17:28:16.384856-05:00 jdbc[25]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), veterinario_id bigint, enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-30 17:28:16.385056-05:00 jdbc[25]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-30 17:28:16.385282-05:00 jdbc[25]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]

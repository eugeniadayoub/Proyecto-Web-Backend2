2025-04-23 13:22:16.217450-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy7/jdk.proxy7.$Proxy176.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:24.586494-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy8/jdk.proxy8.$Proxy184.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:27.519663-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy9/jdk.proxy9.$Proxy192.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:34.641525-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy10/jdk.proxy10.$Proxy200.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:38.663498-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy11/jdk.proxy11.$Proxy208.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:40.595038-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy12/jdk.proxy12.$Proxy216.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:42.431559-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy13/jdk.proxy13.$Proxy224.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:45.755822-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy14/jdk.proxy14.$Proxy232.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:48.889275-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy15/jdk.proxy15.$Proxy240.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:51.835291-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy16/jdk.proxy16.$Proxy248.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:22:54.737102-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy17/jdk.proxy17.$Proxy256.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:09.797170-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy18/jdk.proxy18.$Proxy264.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:32.959824-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_MEDIC" not found; SQL statement:
insert into medicamento (nombre,precio_compra,precio_venta,unidades_disponibles,unidades_vendidas,id_medic) values (?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy19/jdk.proxy19.$Proxy270.saveAll(Unknown Source)
	at com.proyecto.buckys_vet.servicio.MedicamentoExcelService.importarDesdeExcel(MedicamentoExcelService.java:63)
	at com.proyecto.buckys_vet.BuckysVetApplication.lambda$0(BuckysVetApplication.java:29)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:32.988307-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy19/jdk.proxy19.$Proxy272.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:34.768586-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy20/jdk.proxy20.$Proxy280.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:39.858942-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy21/jdk.proxy21.$Proxy288.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:45.810105-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy22/jdk.proxy22.$Proxy296.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:49.020860-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy23/jdk.proxy23.$Proxy304.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:52.169540-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy24/jdk.proxy24.$Proxy312.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:55.246688-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_MEDICAMENTO" not found; SQL statement:
insert into medicamento (nombre,precio_compra,precio_venta,unidades_disponibles,unidades_vendidas,id_medicamento) values (?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy25/jdk.proxy25.$Proxy318.saveAll(Unknown Source)
	at com.proyecto.buckys_vet.servicio.MedicamentoExcelService.importarDesdeExcel(MedicamentoExcelService.java:63)
	at com.proyecto.buckys_vet.BuckysVetApplication.lambda$0(BuckysVetApplication.java:29)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:55.263883-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy25/jdk.proxy25.$Proxy320.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:59.095100-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_MEDICAMENTO" not found; SQL statement:
insert into medicamento (nombre,precio_compra,precio_venta,unidades_disponibles,unidades_vendidas,id_medicamento) values (?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy26/jdk.proxy26.$Proxy326.saveAll(Unknown Source)
	at com.proyecto.buckys_vet.servicio.MedicamentoExcelService.importarDesdeExcel(MedicamentoExcelService.java:63)
	at com.proyecto.buckys_vet.BuckysVetApplication.lambda$0(BuckysVetApplication.java:29)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:23:59.152102-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy26/jdk.proxy26.$Proxy328.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:00.954510-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_MEDICAMENTO" not found; SQL statement:
insert into medicamento (nombre,precio_compra,precio_venta,unidades_disponibles,unidades_vendidas,id_medicamento) values (?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy27/jdk.proxy27.$Proxy334.saveAll(Unknown Source)
	at com.proyecto.buckys_vet.servicio.MedicamentoExcelService.importarDesdeExcel(MedicamentoExcelService.java:63)
	at com.proyecto.buckys_vet.BuckysVetApplication.lambda$0(BuckysVetApplication.java:29)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:00.973292-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy27/jdk.proxy27.$Proxy336.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:05.863194-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_MEDICAMENTO" not found; SQL statement:
insert into medicamento (nombre,precio_compra,precio_venta,unidades_disponibles,unidades_vendidas,id_medicamento) values (?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy28/jdk.proxy28.$Proxy342.saveAll(Unknown Source)
	at com.proyecto.buckys_vet.servicio.MedicamentoExcelService.importarDesdeExcel(MedicamentoExcelService.java:63)
	at com.proyecto.buckys_vet.BuckysVetApplication.lambda$0(BuckysVetApplication.java:29)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:05.883953-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy28/jdk.proxy28.$Proxy344.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:10.862928-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_MEDICAMENTO" not found; SQL statement:
insert into medicamento (nombre,precio_compra,precio_venta,unidades_disponibles,unidades_vendidas,id_medicamento) values (?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy29/jdk.proxy29.$Proxy350.saveAll(Unknown Source)
	at com.proyecto.buckys_vet.servicio.MedicamentoExcelService.importarDesdeExcel(MedicamentoExcelService.java:63)
	at com.proyecto.buckys_vet.BuckysVetApplication.lambda$0(BuckysVetApplication.java:29)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:10.881068-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy29/jdk.proxy29.$Proxy352.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:13.773737-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy30/jdk.proxy30.$Proxy360.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:50.096304-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy137.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:24:56.964681-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy137.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:25:30.251539-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy137.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:26:17.085544-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy137.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:27:17.522818-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy137.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:28:06.203782-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_MEDICAMENTO" not found; SQL statement:
insert into medicamento (nombre,precio_compra,precio_venta,unidades_disponibles,unidades_vendidas,id_medicamento) values (?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy128.saveAll(Unknown Source)
	at com.proyecto.buckys_vet.servicio.MedicamentoExcelService.importarDesdeExcel(MedicamentoExcelService.java:63)
	at com.proyecto.buckys_vet.BuckysVetApplication.lambda$0(BuckysVetApplication.java:29)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 13:28:06.340287-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "ID_VETERINARIO" not found; SQL statement:
insert into veterinario (cedula,contrasena,especialidad,foto,nombre,numero_atenciones,id_veterinario) values (?,?,?,?,?,?,?) [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:328)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$1.doPrepare(MutationStatementPreparerImpl.java:48)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement(MutationStatementPreparerImpl.java:106)
	at org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl.prepareStatement(MutationStatementPreparerImpl.java:38)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.standardStatementPreparation(ModelMutationHelper.java:141)
	at org.hibernate.engine.jdbc.mutation.internal.ModelMutationHelper.lambda$standardPreparation$0(ModelMutationHelper.java:122)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementDetailsStandard.resolveStatement(PreparedStatementDetailsStandard.java:87)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.lambda$beforeStatement$0(JdbcValueBindingsImpl.java:88)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.hibernate.engine.jdbc.mutation.spi.BindingGroup.forEachBinding(BindingGroup.java:51)
	at org.hibernate.engine.jdbc.mutation.internal.JdbcValueBindingsImpl.beforeStatement(JdbcValueBindingsImpl.java:85)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:130)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1379)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:145)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:130)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy137.findByDuenoId(Unknown Source)
	at com.proyecto.buckys_vet.entidad.DataBaseInit.run(DataBaseInit.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.proyecto.buckys_vet.entidad.DataBaseInit$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.lambda$callRunner$4(SpringApplication.java:784)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:784)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-04-23 15:04:15.735703-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:15.738464-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:15.738717-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:15.738906-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:15.739056-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:15.961459-05:00 jdbc[18]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:724)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:703)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 16 more
2025-04-23 15:04:17.804266-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:17.804635-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:17.804879-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:17.805016-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:17.805169-05:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:18.452764-05:00 jdbc[33]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 15:04:18.480911-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:18.481311-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:18.481517-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:18.481637-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:18.482143-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:19.130324-05:00 jdbc[35]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:19.130557-05:00 jdbc[35]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:19.130715-05:00 jdbc[35]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:19.130812-05:00 jdbc[35]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:19.130926-05:00 jdbc[35]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:20.470467-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:20.471354-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:20.471853-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:20.472086-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:20.472283-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.032932-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.034527-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.035107-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.035499-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.036658-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.341648-05:00 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.342421-05:00 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.342714-05:00 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.342868-05:00 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:22.343019-05:00 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:23.940123-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:23.940639-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:23.940804-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:23.940912-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:23.941051-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:24.126306-05:00 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:24.128290-05:00 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:24.128727-05:00 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:24.128975-05:00 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:24.129182-05:00 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:25.665028-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:25.665314-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:25.665484-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:25.665598-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:25.665735-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.383039-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.384000-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.395180-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.395837-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.396268-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.494810-05:00 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.494988-05:00 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.495125-05:00 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.495214-05:00 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.495331-05:00 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:28.575097-05:00 jdbc[17]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:724)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:703)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 16 more
2025-04-23 15:04:28.886718-05:00 jdbc[18]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 15:04:29.054471-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:29.054900-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:29.055194-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:29.055407-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:29.056056-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:30.488255-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:30.488486-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:30.488697-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:30.488969-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:30.489139-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.294709-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.295953-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.297725-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.298157-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.298294-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.298463-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.298526-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.298603-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.298623-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:04:31.298728-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.514062-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.514973-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.515099-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.515184-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.515280-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.522857-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.523238-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.524936-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.525236-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.525503-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.623730-05:00 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.623920-05:00 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.624071-05:00 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.624162-05:00 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:12.624290-05:00 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.108011-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.112421-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.112682-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.112803-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.112931-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.114584-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.114679-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.114775-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.114846-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.114933-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.139976-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.140161-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.140296-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.140378-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:34.140477-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.310684-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.311341-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.311492-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.311582-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.311684-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.313552-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.313666-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.313775-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.313850-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.313943-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.314170-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.314259-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.314354-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.314425-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:52.314513-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.109017-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.109727-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.114894-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.114981-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115108-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115175-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115228-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115364-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115414-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115463-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115541-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115664-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115730-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115929-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:54.115987-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:56.095051-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:56.095812-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:56.095937-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:56.096018-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:56.096111-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:57.978196-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:57.978905-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:57.979137-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:57.979231-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:57.979329-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.260813-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.260856-05:00 jdbc[12]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.261004-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.261139-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.261228-05:00 jdbc[12]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.261262-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.262277-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.262362-05:00 jdbc[12]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.262456-05:00 jdbc[12]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:08:58.262554-05:00 jdbc[12]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:03.984930-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:03.995275-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:03.995829-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:03.996067-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:03.996327-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.011452-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.011642-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.011869-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.011984-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.012099-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.012137-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.012259-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.012391-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.012467-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:09:04.012612-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.616557-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.617655-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.617740-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.618235-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.618306-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.618692-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.619135-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.619341-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.619576-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.619780-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.619847-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.620239-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.620294-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.621214-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:49.621865-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.971145-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.971367-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.971687-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.971838-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.971901-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.972083-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.972107-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.972243-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.972372-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:48:55.972440-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.215177-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.215274-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.215906-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.216389-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.216510-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.216638-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.217011-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.217219-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.217983-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.218762-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.228102-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.228377-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.228612-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.228786-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:05.229078-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.261280-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262102-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262185-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262400-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262465-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262621-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262681-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262711-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262791-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.262993-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.263017-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.263131-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.263158-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.263322-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:08.263704-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.382574-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.383974-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.385204-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.385936-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.386199-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.386443-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.386462-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.386653-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.386837-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.387079-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.390111-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.390619-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.390978-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.391139-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:49:14.391877-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.442915-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.443953-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.444344-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.444693-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.445025-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.469909-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.471351-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.471623-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.471761-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:13.471923-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:15.589136-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:15.589423-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:15.589613-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:15.589735-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:15.589876-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.431087-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.431985-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.432234-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.432699-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.432887-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.433874-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.437281-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.437873-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.438264-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:16.438630-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.450244-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.450544-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.450715-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.450821-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.450946-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.451597-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.451733-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.451870-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.451961-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.452081-05:00 jdbc[28]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.453949-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.454058-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.454174-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.454263-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.454379-05:00 jdbc[26]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.469289-05:00 jdbc[29]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 15:52:18.524129-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.524664-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.525058-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.525293-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:18.526454-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:19.756485-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:19.756841-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:19.757044-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:19.757154-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:19.757276-05:00 jdbc[48]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.315644-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.316119-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.316239-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.316325-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.316435-05:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.317851-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.317880-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318076-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318131-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318418-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318445-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318533-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318564-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318647-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 15:52:20.318887-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:23:11.675964-05:00 jdbc[13]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 19:23:11.734976-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:23:11.735457-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:23:11.735835-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:23:11.736108-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:23:11.736564-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:24.584146-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:24.585047-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:24.585338-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:24.585550-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:36.917108-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:36.918501-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:36.918901-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:36.919111-05:00 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:40.260564-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:40.261320-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:40.261626-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:40.261813-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:40.262011-05:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:41.301275-05:00 jdbc[17]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 19:25:41.327695-05:00 jdbc[17]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:41.327911-05:00 jdbc[17]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:41.328113-05:00 jdbc[17]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:41.328352-05:00 jdbc[17]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:25:41.328583-05:00 jdbc[17]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.123106-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.123985-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.124220-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.124391-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.124573-05:00 jdbc[27]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.415792-05:00 jdbc[30]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 19:26:15.477813-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.478111-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.478337-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.478493-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.478679-05:00 jdbc[30]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.481002-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.481440-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.481848-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.482081-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:26:15.482281-05:00 jdbc[29]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.011411-05:00 jdbc[42]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.012759-05:00 jdbc[42]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.013847-05:00 jdbc[42]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.014516-05:00 jdbc[42]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.015238-05:00 jdbc[42]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.796224-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.799071-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.799301-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.799443-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:40.799604-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.209470-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.209717-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.209900-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.210022-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.210251-05:00 jdbc[18]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.466387-05:00 jdbc[20]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 19:29:42.490343-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.490597-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.490815-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.490978-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.491168-05:00 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.561591-05:00 jdbc[21]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.561784-05:00 jdbc[21]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.561954-05:00 jdbc[21]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.562070-05:00 jdbc[21]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:29:42.562199-05:00 jdbc[21]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.531433-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.532549-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.533017-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.533608-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.535012-05:00 jdbc[34]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.535671-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.535801-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.535963-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.536068-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:05.536305-05:00 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.080624-05:00 jdbc[44]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:135)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.proyecto.buckys_vet.BuckysVetApplication.main(BuckysVetApplication.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
2025-04-23 19:39:06.159152-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.159503-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.159769-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.159910-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.169189-05:00 jdbc[44]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.230668-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MEDICAMENTO" already exists; SQL statement:
create global temporary table HTE_medicamento(rn_ integer not null, unidades_disponibles integer, unidades_vendidas integer, id bigint, precio_compra float(53), precio_venta float(53), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.231239-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_VETERINARIO" already exists; SQL statement:
create global temporary table HTE_veterinario(numero_atenciones integer, rn_ integer not null, cedula bigint, id bigint, contrasena varchar(255), especialidad varchar(255), foto varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.231502-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_MASCOTA" already exists; SQL statement:
create global temporary table HTE_mascota(edad integer, rn_ integer not null, dueno_id bigint, mascota_id bigint, peso float(53), enfermedad varchar(255), especie varchar(255), estado varchar(255), imagen_url varchar(255), nombre varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.231716-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_DUENO" already exists; SQL statement:
create global temporary table HTE_dueno(rn_ integer not null, cedula bigint, id bigint, email varchar(255), imagen_url varchar(255), nombre varchar(255), password varchar(255), telefono varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
2025-04-23 19:39:06.231895-05:00 jdbc[45]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "HTE_TRATAMIENTO" already exists; SQL statement:
create global temporary table HTE_tratamiento(cantidad integer, fecha date, rn_ integer not null, id bigint, mascota_id bigint, medicamento_id bigint, veterinario_id bigint, descripcion varchar(255), primary key (rn_)) TRANSACTIONAL [42101-232]
